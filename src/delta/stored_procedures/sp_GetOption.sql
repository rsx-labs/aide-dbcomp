USE [AIDE]
GO

/****** Object:  StoredProcedure [dbo].[sp_GetAttendanceToday]    Script Date: 5/29/2020 6:27:52 PM ******/
DROP PROCEDURE [dbo].[sp_GetOption]
GO

/****** Object:  StoredProcedure [dbo].[sp_GetAttendanceToday]    Script Date: 5/29/2020 6:27:52 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[sp_GetOption]
	@OPTION_ID INT,
	@MODULE_ID INT,
	@FUNCTION_ID INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQLSTR VARCHAR(MAX)

		SET @SQLSTR = 'SELECT O.OPTIONID AS ''OPTION_ID'', O.VALUE, OM.DESCRIPTION AS ''MODULE_DESCR'', OPF.DESCRIPTION AS ''FUNCTION_DESCR'' FROM [DBO].[OPTION] O 
							INNER JOIN [DBO].[OPTION_MODULE] OM ON O.MODULEID = OM.MODULEID
							INNER JOIN [DBO].[OPTION_FUNCTION] OPF ON O.FUNCTIONID = OPF.FUNCTIONID WHERE'

	IF NOT @OPTION_ID = 0
	BEGIN	
		SET @SQLSTR = @SQLSTR + ' O.OPTIONID = ' + CONVERT(VARCHAR(50), @OPTION_ID)
	END
	ELSE
	BEGIN
		IF @MODULE_ID = 0 AND @FUNCTION_ID = 0 
			SET @SQLSTR = @SQLSTR + ' O.OPTIONID >0 '
		ELSE
		BEGIN
			IF NOT @MODULE_ID = 0
				SET @SQLSTR = @SQLSTR + ' O.MODULEID = ' + CONVERT(VARCHAR(50), @MODULE_ID)

			IF NOT @FUNCTION_ID = 0
				SET @SQLSTR = @SQLSTR + ' AND O.FUNCTIONID = ' + CONVERT(VARCHAR(50), @FUNCTION_ID)
		END
	END
	
	EXEC(@SQLSTR)
END

GO


